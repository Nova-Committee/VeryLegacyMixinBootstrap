buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
		maven {
            name = "jitpack.io"
            url = "https://jitpack.io"
        }
        jcenter()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.0-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.0.0"
group = "committee.nova.vlmixinbootstrap" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "VeryLegacyMixinBootstrap-Forge-1.6.4"

configurations {
    shade
    compile.extendsFrom shade
}

sourceCompatibility = targetCompatibility = 6

minecraft {
	version = "1.6.4-9.11.1.964"
}

repositories {
	mavenLocal()
	maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/repository/maven-public'
    }
}

dependencies {
	shade('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        // Mixin includes a lot of dependencies that are too up-to-date
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    shade('org.apache.logging.log4j:log4j-core:2.3.2')
    shade('org.apache.logging.log4j:log4j-api:2.3.2')
}

jar {
    manifest {
        attributes([
                'FMLCorePluginContainsFMLMod': 'true',
                "FMLCorePlugin"              : "committee.nova.vlmixinbootstrap.core.VLMixinBootstrapCore",
                "TweakOrder"                 : -2147483648,
                "ForceLoadAsMod"             : true
        ])
    }

    configurations.shade.copyRecursive().setTransitive(false).each { artifact ->
        from (zipTree(artifact)) {
            exclude "META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.MF"
        }
    }
}

processResources {
	// this will ensure that this task is redone when the versions change.
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'version':project.version, 'mcversion':project.minecraft.version
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}


configurations.all{
	//Leave it alone
	resolutionStrategy{
		force 'net.sourceforge.argo:argo:3.4'
	}
}

task deobfJar(type: Jar) {
    from sourceSets.main.output

    classifier = 'dev'
}

artifacts {
    archives deobfJar
}